# Download a single file
curl http://path.to.the/file

# Download a file and specify a new filename
curl http://example.com/file.zip -o new_file.zip

# Download multiple files
curl -O URLOfFirstFile -O URLOfSecondFile

# Download all sequentially numbered files (1-24)
curl http://example.com/pic[1-24].jpg

# Download a file and pass HTTP Authentication
curl -u username:password URL 

# Download a file with a Proxy
curl -x proxysever.server.com:PORT http://addressiwantto.access

# Download a file from FTP
curl -u username:password -O ftp://example.com/pub/file.zip

# Get an FTP directory listing
curl ftp://username:password@example.com

# Resume a previously failed download
curl -C - -o partial_file.zip http://example.com/file.zip

# Fetch only the HTTP headers from a response
curl -I http://example.com

# Fetch your external IP and network info as JSON
curl http://ifconfig.me/all/json

# Limit the rate of a download
curl --limit-rate 1000B -O http://path.to.the/file

# AKAMAI Troubleshooting. Add pragma headers to request
# http://stackoverflow.com/questions/8811741/whats-the-best-way-to-troubleshoot-akamai-headers-these-days
curl -H "Pragma: akamai-x-cache-on, akamai-x-cache-remote-on, akamai-x-check-cacheable, akamai-x-get-cache-key, akamai-x-get-extracted-values, akamai-x-get-nonces, akamai-x-get-ssl-client-session-id, akamai-x-get-true-cache-key, akamai-x-serial-no" -IXGET http://uri/


# OWASP CRS t-shoot
# Failed to parse request body 
curl --header "Content-Type: application/json"  --header "Accept: application/json" -XGET  --data '{"test":"string' localhost/index.html

# Follow redirects
curl -L google.com

# Check with hostname without updating hosts
curl -Iks -H "Host: flex-perf-test.cloud.modeln.com"  https://localhost/ecmlogin/

curl http://localhost:7001/modeln/BusinessNetwork\?heartbeat\=true\!alive
curl https:///localhost:7001j/wl/heartbeat

Flex:
For Summer17 URI will be /ecmws/resources/health/
{db,json/db}
For Winter17 and further releases - /ecmws/resources/health/
{json/node,node}

HT:
Â» curl -s https://ampleon-stg.modeln.com/services/ExportInfo\?wsdl | grep wsdlsoap:address 
                           <wsdlsoap:address location="https://ampleon-stg.modeln.com/services/ExportInfo"/>



https://allegro.modeln.com/j/wl?WPAGE=cm.system.html.ServerHealthPage&JMETH=init&CHECK_DB_POOL=1

 curl -vvvk --cert /home/ec2-user/q.pem --key /home/ec2-user/q.ley https://test:443 --resolve test:443:10.103.5.5

#Cognos dispatcher healthchecks
curl localhost:9300/p2pd/servlet/gc
curl localhost:9300/p2pd/servlet

# Hundreds mb > indices in es 
curl --silent --request GET elastic:$es_password@localhost:9200/_cat/indices?v | awk '$9 ~/[0-9]{3}.*mb|gb/{print}'
